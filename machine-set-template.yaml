apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: windows-machine-set-template
  namespace: openshift-machine-api
  annotations:
    description: "Windows machine set template"
    iconClass: "icon-openshift"
    tags: "machineset,windows"
objects:
- apiVersion: machine.openshift.io/v1beta1
  kind: MachineSet
  metadata:
    labels:
      machine.openshift.io/cluster-api-cluster: ${INFRA_ID}
    name: ${INFRA_ID}-windows-worker-${ZONE}
    namespace: openshift-machine-api
  spec:
    replicas: 1
    selector:
      matchLabels:
        machine.openshift.io/cluster-api-cluster: ${INFRA_ID}
        machine.openshift.io/cluster-api-machineset: ${INFRA_ID}-windows-worker-${ZONE}
    template:
      metadata:
        labels:
          machine.openshift.io/cluster-api-cluster: ${INFRA_ID}
          machine.openshift.io/cluster-api-machine-role: worker
          machine.openshift.io/cluster-api-machine-type: worker
          machine.openshift.io/cluster-api-machineset: ${INFRA_ID}-windows-worker-${ZONE}
          machine.openshift.io/os-id: Windows
      spec:
        metadata:
          labels:
            node-role.kubernetes.io/worker: ""
        providerSpec:
          value:
            ami:
              id: ${AMI}
            apiVersion: awsproviderconfig.openshift.io/v1beta1
            blockDevices:
              - ebs:
                  iops: 0
                  volumeSize: 120
                  volumeType: gp2
            credentialsSecret:
              name: aws-cloud-credentials
            deviceIndex: 0
            iamInstanceProfile:
              id: ${INFRA_ID}-worker-profile
            instanceType: m5a.large
            kind: AWSMachineProviderConfig
            placement:
              availabilityZone: ${ZONE}
              region: ${REGION}
            securityGroups:
              - filters:
                  - name: tag:Name
                    values:
                      - ${INFRA_ID}-worker-sg
            subnet:
              filters:
                - name: tag:Name
                  values:
                    - ${INFRA_ID}-private-${ZONE}
            tags:
              - name: kubernetes.io/cluster/${INFRA_ID}
                value: owned
            userDataSecret:
              name: windows-user-data
              namespace: openshift-machine-api
parameters:
- description: "Cluster id, find it by running something like oc get -o jsonpath='{.status.infrastructureName}{\"\n\"}' infrastructure cluster"
  name: INFRA_ID
- description: AWS Availability zone
  name: ZONE
- description: AWS Region
  name: REGION
- description: Windows AMI
  name: AMI
